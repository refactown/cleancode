Considere a seguinte lista de regras para funções baseadas em clean code:

1. Funções devem ser pequenas (<= 20 linhas)
2. Funções devem fazer apenas uma coisa
3. Devem ter nomes descritivos do que fazem
4. Somente um nível de abstração por função
5. Funções devem ter poucos parâmetros

Para cada regra mostre um exemplo de código que descumpre esta regra.

ChatGPT
Claro, vou fornecer um exemplo para cada uma das regras:

Funções devem ser pequenas (<= 20 linhas):
python
Copy code
def calculate_complex_formula(a, b, c, d, e, f, g):
    result = a * b - c / d + (e ** f) / g
    return result
Esta função viola a regra porque é longa e difícil de entender.

Funções devem fazer apenas uma coisa:
python
Copy code
def process_data_and_send_email(data):
    processed_data = process_data(data)
    send_email(processed_data)
Esta função faz duas coisas: processa dados e envia um e-mail.

Devem ter nomes descritivos do que fazem:
python
Copy code
def xyz():
    # código aqui
O nome da função não indica o que ela faz.

Somente um nível de abstração por função:
python
Copy code
def process_data(data):
    for item in data:
        if item['status'] == 'active':
            send_notification(item)
        else:
            log_error(item)
Esta função tem dois níveis de abstração: processa dados e envia notificações ou registra erros.

Funções devem ter poucos parâmetros:
python
Copy code
def calculate_area(length, width, height, depth, density, temperature, pressure):
    # código para calcular a área com base em todos esses parâmetros
Esta função tem muitos parâmetros, o que pode torná-la difícil de usar e entender.

Estes exemplos ilustram como violar essas regras pode resultar em código difícil de manter e entender.

User
Considere o código a seguir:

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

/**
 * Versão com nomes, formatação e comentários melhorados.
 * O método ainda é monolítico e muito grande (34 linhas).
 */
public class MegaSenaV1 {

    /**
     * Método que calcula o valor que uma certa aposta deve receber em função do número de acertos.
     *
     * @param numerosApostados Os números jogados em uma aposta.
     * @param premioTotal      O valor to prêmio em relação ao número de acertos.
     * @return O valor do prêmio a ser recebido por esta aposta.
     */
    public double calculaPremio(List<Integer> numerosApostados, double premioTotal) {
        List<Integer> numerosValidos = new ArrayList<>();
        for (Integer apostado : numerosApostados) {
            if (apostado < 1 || apostado > 60) {
                return 0.0; // inválido
            }
            if (numerosValidos.contains(apostado)) {
                return 0.0; // repetido
            }
            numerosValidos.add(apostado);
        }

        if (numerosValidos.size() >= 6 && numerosValidos.size() <= 15) {
            List<Integer> numerosSorteados = new ArrayList<>();
            int numeroSorteado;
            while (numerosSorteados.size() < 6) {
                numeroSorteado = new Random().nextInt(59) + 1;
                if (!numerosSorteados.contains(numeroSorteado)) {
                    numerosSorteados.add(numeroSorteado);
                }
            }

            int acertos = 0;
            for (Integer apostado : numerosApostados) {
                if (numerosSorteados.contains(apostado)) {
                    acertos++;
                }
            }

            if (acertos == 6) {
                return premioTotal; // Sena = 100%
            } else if (acertos == 5) {
                return premioTotal * 0.2; // Quina = 20%
            } else if (acertos == 4) {
                return premioTotal * 0.05; // Quadra = 5%
            }
        }
        return 0.0;
    }
}

Avalie este código com base nas cinco regras apresentadas anteriormente e diga qual delas está sendo cumprida e qual não está.
ChatGPT
Vamos avaliar o código fornecido com base nas cinco regras apresentadas:

Funções devem ser pequenas (<= 20 linhas):
Esta regra não está sendo cumprida. A função calculaPremio tem 34 linhas, o que a torna muito longa.

Funções devem fazer apenas uma coisa:
Esta regra está parcialmente cumprida. A função calculaPremio realiza várias operações: valida os números da aposta, gera os números sorteados, verifica os acertos e calcula o prêmio. Seria melhor dividir essas tarefas em funções separadas.

Devem ter nomes descritivos do que fazem:
Esta regra está sendo cumprida. O nome calculaPremio descreve claramente o propósito da função.

Somente um nível de abstração por função:
Esta regra não está sendo cumprida. A função calculaPremio tem vários níveis de abstração: validação dos números, geração dos números sorteados, verificação dos acertos e cálculo do prêmio. Cada uma dessas operações poderia ser abstraída para funções separadas.

Funções devem ter poucos parâmetros:
Esta regra está sendo cumprida. A função calculaPremio tem apenas dois parâmetros, o que é razoável.

Em resumo, das cinco regras apresentadas, apenas duas estão sendo cumpridas integralmente neste código: ter nomes descritivos e ter poucos parâmetros. As outras três regras estão sendo violadas em maior ou menor grau.
